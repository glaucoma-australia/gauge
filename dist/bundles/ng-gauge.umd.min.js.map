{"version":3,"file":"ng-gauge.umd.min.js","sources":["~/ng-gauge/src/app/gauge/gauge.component.ts","~/ng-gauge/src/app/gauge/gauge.module.ts","~/ng-gauge/src/app/gauge/shared/gauge-segment.ts","~/ng-gauge/src/app/gauge/shared/gauge-label.ts"],"sourcesContent":["/**\n * @category   Component\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n **/\n\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport { GaugeLabel } from './shared/gauge-label';\nimport { GaugeSegment } from './shared/gauge-segment';\n\n@Component({\n  selector: 'ng-gauge',\n  template: `\n    <svg viewBox=\"0 0 200 200\">\n      <g\n        class=kw-holder\n        [attr.transform]=\"isIE11 ? 'translate(100 100) rotate(-90)' : ''\">\n        <circle\n          class=kw-back\n          [attr.r]=\"bgRadius\"\n          [style.fill]=bgColor/>\n\n          <g\n            *ngFor=\"let segment of sortedSegments\">\n            <circle\n              class=kw-mid\n              [style.stroke]=segment.bgColor\n              [style.strokeWidth]=segment.borderWidth\n              [attr.r]=segment.computedRadius/>\n\n              <circle\n                class=kw-front\n\n                [style.transition]=\"'stroke-dasharray ' + animationSecs + 's'\"\n                [style.stroke]=segment.color\n                [style.strokeWidth]=segment.borderWidth\n                [style.strokeDasharray]=\"segmentsLoaded ? segment.strokeProgress : segment.strokeEmptyProgress\"\n                [style.strokeLinecap]=\"rounded ? 'round' : ''\"\n                [attr.r]=segment.computedRadius/>\n          </g>\n      </g>\n\n      <g\n        transform=\"translate(100, 100)\">\n        <text\n          class=kw-label\n          *ngFor=\"let label of labels\"\n          [attr.x]=label.x\n          [attr.y]=label.y\n          [style.fill]=label.color\n          [style.fontSize]=label.fontSize\n          text-anchor=middle>\n          {{label.text}}\n        </text>\n      </g>\n    </svg>\n  `,\n  styles: [`\n    .kw-mid,\n    .kw-front {\n      fill: transparent;\n    }\n\n    .kw-holder {\n      -webkit-transform: translate(100px, 100px) rotate(-90deg);\n              transform: translate(100px, 100px) rotate(-90deg);\n    }\n  `]\n})\nexport class GaugeComponent implements OnInit {\n  @Input() bgRadius = 100;\n  @Input() bgColor: string;\n  @Input() rounded = true;\n  @Input() reverse = false;\n  @Input() animationSecs = 0.5;\n\n  @Input() labels: GaugeLabel[];\n\n\n  @Input()\n  set segments(segments: GaugeSegment[]) {\n    this.segmentsLoaded = false;\n    this.sortedSegments = this.sortSegments(segments);\n\n    // wait a bit and start animation\n    setTimeout(\n      () => this.segmentsLoaded = true,\n      0);\n  }\n  sortedSegments: GaugeSegment[];\n  segmentsLoaded = false;\n\n  isIE11 = /Trident.*rv[ :]*11\\./.test(navigator.userAgent);\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  sortSegments(segments: GaugeSegment[]) {\n    return segments && segments.sort((a: GaugeSegment, b: GaugeSegment) => {\n      if (this.reverse) {\n        return (a.value / a.goal > b.value / b.goal) ? 1 : -1;\n      } else {\n        return (a.value / a.goal > b.value / b.goal) ? -1 : 1;\n      }\n    });\n  }\n}\n","/**\n * @category   Module\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n **/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GaugeComponent } from './gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [GaugeComponent],\n  exports: [GaugeComponent]\n})\nexport class GaugeModule { }\n","/**\n * @category   Model\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n**/\n\n\n\n\n// ANGULAR\n\n\n\n\n// EXTERNAL\n\n\n\n\n// OWN\n\n\n\n\n\nexport class GaugeSegment {\n  radius: number;\n  goal: number;\n  value: number;\n  color: string;\n  bgColor: string;\n  borderWidth: number;\n\n\n  constructor(options: {\n    radius?: number,\n    goal?: number,\n    value?: number,\n    color?: string,\n    bgColor?: string,\n    borderWidth?: number\n  } = {}) {\n    this.radius = options.radius || 100;\n    this.goal = options.goal || 100;\n    this.value = options.value;\n    this.color = options.color;\n    this.bgColor = options.bgColor || 'transparent';\n    this.borderWidth = options.borderWidth || 100;\n  }\n\n\n\n  get computedRadius() {\n    return this.radius - this.borderWidth / 2;\n  }\n\n  get strokeProgress(this: GaugeSegment) {\n    return `${2 * Math.PI * this.computedRadius * this.value / this.goal} ${2 * Math.PI * this.computedRadius}`;\n  }\n\n  get strokeEmptyProgress(this: GaugeSegment) {\n    return `0 ${2 * Math.PI * this.computedRadius}`;\n  }\n}\n","/**\n * @category   Model\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n**/\n\n\n\n\n// ANGULAR\n\n\n\n\n// EXTERNAL\n\n\n\n\n// OWN\n\n\n\n\n\nexport class GaugeLabel {\n  color: string;\n  text: string;\n  x: number;\n  y: number;\n  fontSize: string;\n\n\n  constructor(options: {\n    color?: string,\n    text?: string,\n    x?: number,\n    y?: number,\n    fontSize?: string\n  } = {}) {\n    this.color = options.color;\n    this.text = options.text;\n    this.x = options.x || 0;\n    this.y = options.y || 0;\n    this.fontSize = options.fontSize || '1em';\n  }\n}\n"],"names":["GaugeComponent","this","bgRadius","rounded","reverse","animationSecs","segmentsLoaded","isIE11","test","navigator","userAgent","Object","defineProperty","prototype","set","segments","_this","sortedSegments","sortSegments","setTimeout","ngOnInit","sort","a","b","value","goal","__decorate","Input","Component","selector","template","styles","exports","GaugeModule","NgModule","imports","CommonModule","declarations","GaugeSegment","options","radius","color","bgColor","borderWidth","get","Math","PI","computedRadius","GaugeLabel","text","x","y","fontSize"],"mappings":"qxBAsEaA,EAhEb,WA2FE,SAAFA,IA1BWC,KAAXC,SAAsB,IAEXD,KAAXE,SAAqB,EACVF,KAAXG,SAAqB,EACVH,KAAXI,cAA2B,GAgBzBJ,KAAFK,gBAAmB,EAEjBL,KAAFM,OAAW,uBAAuBC,KAAKC,UAAUC,WAkBjD,OA9BEC,OAAFC,eAAMZ,EAANa,UAAA,YAAAC,IAAE,SAAaC,GAAb,IAAFC,EAAAf,KACIA,KAAKK,gBAAiB,EACtBL,KAAKgB,eAAiBhB,KAAKiB,aAAaH,GAGxCI,WACE,WAAM,OAAAH,EAAKV,gBAAiB,GAC5B,oCAWJN,EAAFa,UAAAO,SAAE,aAGApB,EAAFa,UAAAK,aAAE,SAAaH,GAAb,IAAFC,EAAAf,KACI,OAAOc,GAAYA,EAASM,KAAK,SAACC,EAAiBC,GACjD,OAAIP,EAAKZ,QACCkB,EAAEE,MAAQF,EAAEG,KAAOF,EAAEC,MAAQD,EAAEE,KAAQ,GAAK,EAE5CH,EAAEE,MAAQF,EAAEG,KAAOF,EAAEC,MAAQD,EAAEE,MAAS,EAAI,KAI5DzB,EAzC2B,GAChB0B,GAARC,EAAAA,iCAAH3B,EAAAa,UAAA,gBAAA,GACWa,GAARC,EAAAA,iCAAH3B,EAAAa,UAAA,eAAA,GACWa,GAARC,EAAAA,iCAAH3B,EAAAa,UAAA,eAAA,GACWa,GAARC,EAAAA,iCAAH3B,EAAAa,UAAA,eAAA,GACWa,GAARC,EAAAA,iCAAH3B,EAAAa,UAAA,qBAAA,GAEWa,GAARC,EAAAA,gCAAH3B,EAAAa,UAAA,cAAA,GAIEa,GADCC,EAAAA,+DASH3B,EAAAa,UAAA,WAAA,MAnBab,EAAb0B,GA3DCE,EAAAA,WACCC,SAAU,WACVC,SAAU,43CA6CVC,QAAS,oQAYE/B,oWChEbgC,EAAAC,YAAA,WAYA,OAAA,aAAwB,GAAXA,EAAAA,YAAbP,GAPCQ,EAAAA,UACCC,SACEC,EAAAA,cAEFC,cAAerC,GACfgC,SAAUhC,MAECiC,EAAAA,aCOb,IAAAK,EAAA,WASE,SAAFA,EAAcC,QAAd,IAAAA,IAAcA,MAQVtC,KAAKuC,OAASD,EAAQC,QAAU,IAChCvC,KAAKwB,KAAOc,EAAQd,MAAQ,IAC5BxB,KAAKuB,MAAQe,EAAQf,MACrBvB,KAAKwC,MAAQF,EAAQE,MACrBxC,KAAKyC,QAAUH,EAAQG,SAAW,cAClCzC,KAAK0C,YAAcJ,EAAQI,aAAe,IAgB9C,OAXEhC,OAAFC,eAAM0B,EAANzB,UAAA,kBAAA+B,IAAE,WACE,OAAO3C,KAAKuC,OAASvC,KAAK0C,YAAc,mCAG1ChC,OAAFC,eAAM0B,EAANzB,UAAA,kBAAA+B,IAAE,WACE,OAAU,EAAIC,KAAKC,GAAK7C,KAAK8C,eAAiB9C,KAAKuB,MAAQvB,KAAKwB,KAApE,IAA4E,EAAIoB,KAAKC,GAAK7C,KAAK8C,gDAG7FpC,OAAFC,eAAM0B,EAANzB,UAAA,uBAAA+B,IAAE,WACE,MAAO,KAAK,EAAIC,KAAKC,GAAK7C,KAAK8C,gDAEnCT,EAtCA,GCAAU,EAAA,WAqBA,OAbE,SAAYT,QAAd,IAAAA,IAAcA,MAOVtC,KAAKwC,MAAQF,EAAQE,MACrBxC,KAAKgD,KAAOV,EAAQU,KACpBhD,KAAKiD,EAAIX,EAAQW,GAAK,EACtBjD,KAAKkD,EAAIZ,EAAQY,GAAK,EACtBlD,KAAKmD,SAAWb,EAAQa,UAAY,OAnBxC"}
