{"version":3,"file":"ng-gauge.umd.js","sources":["~/ng-gauge/src/app/gauge/shared/gauge-label.ts","~/ng-gauge/src/app/gauge/shared/gauge-segment.ts","~/ng-gauge/src/app/gauge/gauge.module.ts","~/ng-gauge/src/app/gauge/gauge.component.ts"],"sourcesContent":["/**\n * @category   Model\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n**/\n\n\n\n\n// ANGULAR\n\n\n\n\n// EXTERNAL\n\n\n\n\n// OWN\n\n\n\n\n\nexport class GaugeLabel {\n  color: string;\n  text: string;\n  x: number;\n  y: number;\n  fontSize: string;\n\n\n  constructor(options: {\n    color?: string,\n    text?: string,\n    x?: number,\n    y?: number,\n    fontSize?: string\n  } = {}) {\n    this.color = options.color;\n    this.text = options.text;\n    this.x = options.x || 0;\n    this.y = options.y || 0;\n    this.fontSize = options.fontSize || '1em';\n  }\n}\n","/**\n * @category   Model\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n**/\n\n\n\n\n// ANGULAR\n\n\n\n\n// EXTERNAL\n\n\n\n\n// OWN\n\n\n\n\n\nexport class GaugeSegment {\n  radius: number;\n  goal: number;\n  value: number;\n  color: string;\n  bgColor: string;\n  borderWidth: number;\n\n\n  constructor(options: {\n    radius?: number,\n    goal?: number,\n    value?: number,\n    color?: string,\n    bgColor?: string,\n    borderWidth?: number\n  } = {}) {\n    this.radius = options.radius || 100;\n    this.goal = options.goal || 100;\n    this.value = options.value;\n    this.color = options.color;\n    this.bgColor = options.bgColor || 'transparent';\n    this.borderWidth = options.borderWidth || 100;\n  }\n\n\n\n  get computedRadius() {\n    return this.radius - this.borderWidth / 2;\n  }\n\n  get strokeProgress(this: GaugeSegment) {\n    return `${2 * Math.PI * this.computedRadius * this.value / this.goal} ${2 * Math.PI * this.computedRadius}`;\n  }\n\n  get strokeEmptyProgress(this: GaugeSegment) {\n    return `0 ${2 * Math.PI * this.computedRadius}`;\n  }\n}\n","/**\n * @category   Module\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n **/\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { GaugeComponent } from './gauge.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [GaugeComponent],\n  exports: [GaugeComponent]\n})\nexport class GaugeModule { }\n","/**\n * @category   Component\n * @package    com.kiwity.gauge.gauge\n * @author     Salvador Subarroca (subarroca@gmail.com)\n **/\n\nimport { Component, Input, OnInit } from '@angular/core';\n\nimport { GaugeLabel } from './shared/gauge-label';\nimport { GaugeSegment } from './shared/gauge-segment';\n\n@Component({\n  selector: 'ng-gauge',\n  template: `\n    <svg viewBox=\"0 0 200 200\">\n      <g\n        class=kw-holder\n        [attr.transform]=\"isIE11 ? 'translate(100 100) rotate(-90)' : ''\">\n        <circle\n          class=kw-back\n          [attr.r]=\"bgRadius\"\n          [style.fill]=bgColor/>\n\n          <g\n            *ngFor=\"let segment of sortedSegments\">\n            <circle\n              class=kw-mid\n              [style.stroke]=segment.bgColor\n              [style.strokeWidth]=segment.borderWidth\n              [attr.r]=segment.computedRadius/>\n\n              <circle\n                class=kw-front\n\n                [style.transition]=\"'stroke-dasharray ' + animationSecs + 's'\"\n                [style.stroke]=segment.color\n                [style.strokeWidth]=segment.borderWidth\n                [style.strokeDasharray]=\"segmentsLoaded ? segment.strokeProgress : segment.strokeEmptyProgress\"\n                [style.strokeLinecap]=\"rounded ? 'round' : ''\"\n                [attr.r]=segment.computedRadius/>\n          </g>\n      </g>\n\n      <g\n        transform=\"translate(100, 100)\">\n        <text\n          class=kw-label\n          *ngFor=\"let label of labels\"\n          [attr.x]=label.x\n          [attr.y]=label.y\n          [style.fill]=label.color\n          [style.fontSize]=label.fontSize\n          text-anchor=middle>\n          {{label.text}}\n        </text>\n      </g>\n    </svg>\n  `,\n  styles: [`\n    .kw-mid,\n    .kw-front {\n      fill: transparent;\n    }\n\n    .kw-holder {\n      -webkit-transform: translate(100px, 100px) rotate(-90deg);\n              transform: translate(100px, 100px) rotate(-90deg);\n    }\n  `]\n})\nexport class GaugeComponent implements OnInit {\n  @Input() bgRadius = 100;\n  @Input() bgColor: string;\n  @Input() rounded = true;\n  @Input() reverse = false;\n  @Input() animationSecs = 0.5;\n\n  @Input() labels: GaugeLabel[];\n\n\n  @Input()\n  set segments(segments: GaugeSegment[]) {\n    this.segmentsLoaded = false;\n    this.sortedSegments = this.sortSegments(segments);\n\n    // wait a bit and start animation\n    setTimeout(\n      () => this.segmentsLoaded = true,\n      0);\n  }\n  sortedSegments: GaugeSegment[];\n  segmentsLoaded = false;\n\n  isIE11 = /Trident.*rv[ :]*11\\./.test(navigator.userAgent);\n\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  sortSegments(segments: GaugeSegment[]) {\n    return segments && segments.sort((a: GaugeSegment, b: GaugeSegment) => {\n      if (this.reverse) {\n        return (a.value / a.goal > b.value / b.goal) ? 1 : -1;\n      } else {\n        return (a.value / a.goal > b.value / b.goal) ? -1 : 1;\n      }\n    });\n  }\n}\n"],"names":["GaugeModule","CommonModule","NgModule","Component","__decorate","Input"],"mappings":"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"}
